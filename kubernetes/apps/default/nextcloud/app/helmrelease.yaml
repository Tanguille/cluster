---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: nextcloud
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 6.6.9
  url: oci://ghcr.io/home-operations/charts-mirror/nextcloud
  verify:
    provider: cosign
---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  timeout: 15m
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: nextcloud
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true

    phpClientHttpsFix:
      enabled: true
      protocol: https

    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16
          envFrom:
            - secretRef:
                name: nextcloud-secret

      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local.
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: PHP_MEMORY_LIMIT
          value: "11G"
        - name: PHP_UPLOAD_LIMIT
          value: "10G"
        - name: PHP_POST_MAX_SIZE
          value: "10G"

      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: NEXTCLOUD_USERNAME
        passwordKey: NEXTCLOUD_PASSWORD
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
        smtpHostKey: SMTP_HOST

      host: nextcloud.${SECRET_DOMAIN}
      containerPort: 80

      mail:
        enabled: true
        fromAddress: ${FROM_ADDRESS}
        domain: gmail.com
        smtp:
          host: ${SMTP_HOST}
          port: 465
          authtype: LOGIN
          secure: starttls

      lifecycle:
        postStartCommand:
          - "/bin/sh"
          - "-c"
          - "su -s /bin/sh www-data -c 'php occ db:add-missing-indices' || true"

      configs:
        logging.config.php: |-
          <?php
          $CONFIG = array (
            'log_type' => 'file',
            'logfile' => 'nextcloud.log',
            'loglevel' => 1,
            'logdateformat' => 'F d, Y H:i:s'
            );
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.0.0.0/8',
              2 => '172.16.0.0/12',
              3 => '192.168.0.0/16',
            ),
            'trusted_domains' => array(
              0 => 'nextcloud.${SECRET_DOMAIN}',
              1 => 'localhost',
              2 => '127.0.0.1',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          ); ?>
        ingress.config.php: |-
          <?php
          $CONFIG = array (
            'overwrite.cli.url' => 'https://nextcloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
          );
        misc.config.php: |-
          <?php
          $CONFIG = array (
            'default_phone_region' => 'BE',
            'maintenance_window_start' => 2,
          );
        datadir: /var/www/data

    deploymentAnnotations:
      reloader.stakater.com/auto: "true"

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres16-rw.database.svc.cluster.local:5432
      database: *app
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS

    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.org/proxy-hide-headers: "X-Powered-By"
        nginx.org/server-tokens: "off"
        nginx.org/rewrites: |
          /.well-known/webfinger /index.php/.well-known/webfinger;
          /.well-known/nodeinfo /index.php/.well-known/nodeinfo;
          /.well-known/host-meta /public.php?service=host-meta;
          /.well-known/host-meta.json /public.php?service=host-meta-json;
          /.well-known/carddav $scheme://$host/remote.php/dav redirect=301;
          /.well-known/caldav $scheme://$host/remote.php/dav redirect=301;
        nginx.ingress.kubernetes.io/server-snippet: |
          location = /robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }

      path: /
      pathType: Prefix

    persistence:
      # Config storage using volsync template PVC (local)
      enabled: true
      existingClaim: *app

      # Data directory using NFS
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-pvc

    cronjob:
      enabled: true

    startupProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      failureThreshold: 10
      successThreshold: 1

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 4
        memory: 8Gi
