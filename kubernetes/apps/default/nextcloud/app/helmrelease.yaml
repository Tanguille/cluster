---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  timeout: 15m
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 6.3.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    image:
      flavor: fpm-alpine
    nginx:
      enabled: true

    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16
          envFrom:
            - secretRef:
                name: nextcloud-secret
        - name: init-dependencies
          image: debian:bookworm-slim
          command:
            - /bin/sh
            - -c
            - |
              apt-get update && \
              apt-get install -y ffmpeg && \
              mkdir -p /shared-bin && \
              cp $(which ffmpeg) /shared-bin/ && \
              cp $(which ffprobe) /shared-bin/ && \
              chmod +rx /shared-bin/* && \
              chown www-data:www-data /shared-bin/*
          volumeMounts:
            - name: shared-bin
              mountPath: /shared-bin

      extraEnv:
        - name: REDIS_HOST
          value: dragonfly.database.svc.cluster.local.
        - name: REDIS_HOST_PORT
          value: "6379"

      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: NEXTCLOUD_USERNAME
        passwordKey: NEXTCLOUD_PASSWORD
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
        smtpHostKey: SMTP_HOST

      host: nextcloud.${SECRET_DOMAIN}

      mail:
        enabled: true
        fromAddress: ${FROM_ADDRESS}
        domain: gmail.com
        smtp:
          host: ${SMTP_HOST}
          port: 465
          authtype: LOGIN
          secure: starttls

      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.96.0.0/16',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          );
        ingress.config.php: |-
          <?php
          $CONFIG = array (
            'overwrite.cli.url' => 'https://nextcloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
          );
        misc.config.php: |-
          <?php
          $CONFIG = array (
            'default_phone_region' => 'BE',
          );
        redis.config.php: |-
          <?php
          $CONFIG = array (
            'memcache.local' => '\\OC\\Memcache\\APCu',
            'memcache.distributed' => '\\OC\\Memcache\\Redis',
            'memcache.locking' => '\\OC\\Memcache\\Redis',
            'redis' => array(
              'host' => 'dragonfly.database.svc.cluster.local.',
              'port' => 6379,
            ),
          );
        permissions.config.php: |-
          <?php
          $CONFIG = array (
            'supportedDatabases' => array(
              'postgresql'
            ),
          );
        logging.config.php: |
          <?php
          $CONFIG = array(
            'log_type' => 'errorlog',
            'logfile' => '',
            'loglevel' => 2,
          );

        memories.config.php: |
          <?php
          $CONFIG = array(
            'memories.ffmpeg_path' => '/usr/local/bin/ffmpeg',
            'memories.ffprobe_path' => '/usr/local/bin/ffprobe'
          );

      datadir: /var/www/data

      extraVolumes:
        - name: shared-bin
          emptyDir: {}

      extraVolumeMounts:
        - name: shared-bin
          mountPath: /usr/local/bin

      phpConfigs:
        custom.ini: |
          memory_limit=512M
          upload_max_filesize=16G
          post_max_size=16G
          max_execution_time=3600
          max_input_time=3600

    deploymentAnnotations:
      reloader.stakater.com/auto: "true"

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres16-rw.database.svc.cluster.local:5432
      database: *app
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS

    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        nginx.ingress.kubernetes.io/fastcgi-read-timeout: "600"
        nginx.ingress.kubernetes.io/fastcgi-send-timeout: "600"
        nginx.ingress.kubernetes.io/fastcgi-connect-timeout: "60"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
            deny all;
          }
          location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+)\.php(?:$|/) {
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            try_files $fastcgi_script_name =404;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param modHeadersAvailable true;
            fastcgi_param front_controller_active true;
            fastcgi_read_timeout 180;
            fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off;
          }
      path: /
      pathType: Prefix

    persistence:
      # Config storage using volsync template PVC (local)
      enabled: true
      existingClaim: *app

      # Data directory using NFS
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-pvc

    cronjob:
      enabled: true

    startupProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1

    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 4
        memory: 5Gi

    strategy:
      type: Recreate
