# This is an example configuration file that documents all the options.
# It will need to be modified for your specific use case.
# Please refer to the link below for more details on how to set up the configuration file
# https://github.com/StuffAnThings/qbit_manage/wiki/Config-Setup

commands:
  # The commands defined below will OVERRIDE any commands used in command line and docker env variables.
  dry_run: True
  recheck: True
  cat_update: True
  tag_update: True
  rem_unregistered: True
  tag_tracker_error: True
  rem_orphaned: True
  tag_nohardlinks: True
  share_limits: True
  skip_qb_version_check: False
  skip_cleanup: False

qbt:
  host: qbittorrent.media.svc.cluster.local
  user: ${QBITTORRENT_USER}
  pass: ${QBITTORRENT_PWD}

settings:
  force_auto_tmm: True # Will force qBittorrent to enable Automatic Torrent Management for each torrent.
  force_auto_tmm_ignore_tags: #Torrents with these tags will be ignored when force_auto_tmm is enabled.
    - cross-seed
  tracker_error_tag: issue # Will set the tag of any torrents that do not have a working tracker.
  nohardlinks_tag: noHL # Will set the tag of any torrents with no hardlinks.
  stalled_tag: stalledDL # Will set the tag of any torrents stalled downloading.
  share_limits_tag: ~share_limit # Will add this tag when applying share limits to provide an easy way to filter torrents by share limit group/priority for each torrent
  share_limits_min_seeding_time_tag: MinSeedTimeNotReached # Tag to be added to torrents that have not yet reached the minimum seeding time
  share_limits_min_num_seeds_tag: MinSeedsNotMet # Tag to be added to torrents that have not yet reached the minimum number of seeds
  share_limits_last_active_tag: LastActiveLimitNotReached # Tag to be added to torrents that have not yet reached the last active limit
  cat_filter_completed: True # Filters for completed torrents only when running cat_update command
  share_limits_filter_completed: True # Filters for completed torrents only when running share_limits command
  tag_nohardlinks_filter_completed: True # Filters for completed torrents only when running tag_nohardlinks command
  rem_unregistered_filter_completed: False # Filters for completed torrents only when running rem_unregistered command
  cat_update_all: True # Checks and updates all torrent categories if set to True when running cat_update command, otherwise only update torrents that are uncategorized
  disable_qbt_default_share_limits: True # Allows QBM to handle share limits by disabling qBittorrents default Share limits. Only active when the share_limits command is set to True
  tag_stalled_torrents: True # Tags any downloading torrents that are stalled with the `stalledDL` tag when running the tag_update command
  rem_unregistered_ignore_list: # Ignores a list of words found in the status of the tracker when running rem_unregistered command and will not remove the torrent if matched
    - example placeholder words
    - ignore if found

directory:
  # Do not remove these
  # root_dir var: </your/path/here/>  # Root downloads directory used to check for orphaned files, noHL, and RecycleBin.
  # <OPTIONAL> remote_dir var: </your/path/here/>  # Path of docker host mapping of root_dir.
  # remote_dir must be set if you're running qbit_manage locally and qBittorrent/cross_seed is in a docker
  # remote_dir should not be set if qbit_manage is running in a container
  # <OPTIONAL> recycle_bin var: </your/path/here/>   # Path of the RecycleBin folder. Default location is set to remote_dir/.RecycleBin
  # <OPTIONAL> torrents_dir var: </your/path/here/>  # Path of the your qbittorrent torrents directory. Required for `save_torrents` attribute in recyclebin
  # <OPTIONAL> orphaned_dir var: </your/path/here/>  # Path of the the Orphaned Data folder. This is similar to RecycleBin, but only for orphaned data.
  root_dir: /media/Downloads/
  orphaned_dir: /media/Downloads/orphaned_data
  cross_seed:

cat:
  # Category & Path Parameters
  # All save paths in qbittorent must be populated below.
  # If you want to leave a save_path as uncategorized you can use the key 'Uncategorized' as the name of the category.
  # You can use Unix filename pattern matching as well when specifying the save_path
  # <Category Name> : <save_path>  # Path of your save directory.
  radarr: /media/Downloads/radarr/
  tv-sonarr: /media/Downloads/tv-sonarr/
  manual: /media/Downloads/manual/
  Downloads: /media/Downloads/

tracker:
  # Mandatory
  # Tag Parameters
  # <Tracker URL Keyword>:    # <MANDATORY> This is the keyword in the tracker url. You can define multiple tracker urls by splitting with `|` delimiter
  # <MANDATORY> Set tag name. Can be a list of tags or a single tag
  #   tag: <Tag Name>
  # <OPTIONAL> Set the category based on tracker URL. This category option takes priority over the category defined by save directory
  #   cat: <Category Name>
  # <OPTIONAL> Set this to the notifiarr react name. This is used to add indexer reactions to the notifications sent by Notifiarr
  #   notifiarr: <notifiarr indexer>
  animebytes.tv:
    tag: AnimeBytes
    notifiarr: animebytes
  animetorrents:
    tag: Animetorrents
  avistaz:
    tag:
      - Avistaz
      - qBitrr-allowed_seeding
    notifiarr: avistaz
  beyond-hd:
    tag: Beyond-HD
    notifiarr: beyondhd
  blutopia:
    tag: Blutopia
    notifiarr: blutopia
  cartoonchaos:
    tag: CartoonChaos
  digitalcore|prxy.digitalcore:
    tag:
      - DigitalCore
      - qBitrr-allowed_seeding
    notifiarr: digitalcore
  gazellegames:
    tag: GGn
  hdts:
    tag: HDTorrents
  landof.tv:
    tag: BroadcasTheNet
    notifiarr: broadcasthenet
  milkie:
    tag: Milkie
    notifiarr: Milkie
  myanonamouse:
    tag: MaM
  passthepopcorn:
    tag: PassThePopcorn
    notifiarr: passthepopcorn
  privatehd:
    tag: PrivateHD
    notifiarr:
  torrentdb:
    tag: TorrentDB
    notifiarr: torrentdb
  torrentleech|tleechreload:
    tag:
      - TorrentLeech
      - qBitrr-allowed_seeding
    notifiarr: torrentleech
  tv-vault:
    tag: TV-Vault
  iptorrents:
    tag:
      - IPTorrents
      - qBitrr-allowed_seeding
    notifiarr: IPTorrents
  alpharatio:
    tag:
      - AlphaRatio
      - qBitrr-allowed_seeding
    notifiarr: AlphaRatio
  hdspace|hd-space:
    tag:
      - HDSpace
      - qBitrr-allowed_seeding
    notifiarr: HDSpace
  fearnopeer:
    tag:
      - FearNoPeer
      - qBitrr-allowed_seeding
    notifiarr: FearNoPeer
  # The "other" key is a special keyword and if defined will tag any other trackers that don't match the above trackers into this tag
  other:
    tag: public

nohardlinks:
  - radarr
  - tv-sonarr

share_limits:
  # Control how torrent share limits are set depending on the priority of your grouping
  # Each torrent will be matched with the share limit group with the highest priority that meets the group filter criteria.
  # Each torrent can only be matched with one share limit group
  # This variable is mandatory and is a text defining the name of your grouping. This can be any string you want
  public_trackers:
    priority: 1
    include_any_tags:
      - public
    max_ratio: 1.0
    max_seeding_time: 86400 # 24 hours in seconds
    cleanup: true

  private_trackers:
    priority: 2
    include_any_tags:
      - AnimeBytes
      - Animetorrents
      - Avistaz
      - Beyond-HD
      - Blutopia
      - CartoonChaos
      - DigitalCore
      - GGn
      - HDTorrents
      - BroadcasTheNet
      - Milkie
      - MaM
      - PassThePopcorn
      - PrivateHD
      - TorrentDB
      - TorrentLeech
      - TV-Vault
      - IPTorrents
      - AlphaRatio
      - HDSpace
      - FearNoPeer
    max_ratio: -1 # Unlimited ratio
    max_seeding_time: -1 # Unlimited seeding time
    cleanup: false

recyclebin:
  # Recycle Bin method of deletion will move files into the recycle bin (Located in /root_dir/.RecycleBin) instead of directly deleting them in qbit
  # By default the Recycle Bin will be emptied on every run of the qbit_manage script if empty_after_x_days is defined.
  enabled: true
  # <OPTIONAL> empty_after_x_days var:
  # Will automatically remove all files and folders in recycle bin after x days. (Checks every script run)
  # If this variable is not defined it, the RecycleBin will never be emptied.
  # WARNING: Setting this variable to 0 will delete all files immediately upon script run!
  empty_after_x_days: 60
  # <OPTIONAL> save_torrents var:
  # If this option is set to true you MUST fill out the torrents_dir in the directory attribute.
  # This will save a copy of your .torrent and .fastresume file in the recycle bin before deleting it from qbittorrent
  save_torrents: false
  # <OPTIONAL> split_by_category var:
  # This will split the recycle bin folder by the save path defined in the `cat` attribute
  # and add the base folder name of the recycle bin that was defined in the `recycle_bin` sub-attribute under directory.
  split_by_category: false

orphaned:
  # Orphaned files are those in the root_dir download directory that are not referenced by any active torrents.
  # Will automatically remove all files and folders in orphaned data after x days. (Checks every script run)
  # If this variable is not defined it, the orphaned data will never be emptied.
  # WARNING: Setting this variable to 0 will delete all files immediately upon script run!
  empty_after_x_days: 30
  # File patterns that will not be considered orphaned files. Handy for generated files that aren't part of the torrent but belong with the torrent's files
  exclude_patterns:
    - "**/Thumbs.db"
    - "**/@eaDir"
    - /media/Downloads/.RecycleBin/**
    - /media/Downloads/cross-seed/**
    - /media/Downloads/cross-seed-link/**
    - /media/Downloads/manual/**
    - /media/Downloads/orphaned_data/**
    - "**/*.!qB"
    - "**/*_unpackerred"
    - "**/*.torrent"
    - "**/*.r[0-9][0-9]"
    - "**/*.part"
  max_orphaned_files_to_delete: 100

webhooks:
  error:
  run_start:
  run_end:
  function:
    cross_seed:
    recheck:
    cat_update:
    tag_update:
    rem_unregistered:
    tag_tracker_error:
    rem_orphaned:
    tag_nohardlinks:
    share_limits:
    cleanup_dirs:
