---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: media
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__SERVER__PORT: &port 80
              SONARR__LOG__LEVEL: info
              SONARR__APP__THEME: dark
              SONARR__LOG__ANALYTICS_ENABLED: "false"
              SONARR__UPDATE__BRANCH: develop
              SONARR__AUTH__APIKEY: ${SONARR_API_KEY}
              TZ: ${TIMEZONE}

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                cpu: 2
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: envoy-internal
            namespace: network

    persistence:
      config:
        existingClaim: *app

      tmp:
        type: emptyDir
        medium: Memory

      media:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/BIGHDDZ1/Media
        globalMounts:
          - path: /media
            readOnly: false
