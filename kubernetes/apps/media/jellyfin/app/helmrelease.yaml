---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 1h
  timeout: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      runtimeClassName: nvidia
      enableServiceLinks: false
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44
          - 109
          - 100

    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/jellyfin/jellyfin
              tag: 10.11.0@sha256:519b02989eafcc4bdb558bdc7014c2395c19608e5c2d7ed99a5f3edd0c75f7ef
            command:
              - sh
              - -c
              - |
                echo "=== Fixing Jellyfin web permissions for plugins ==="
                if [ -f /jellyfin/jellyfin-web/index.html ]; then
                  chown 568:568 /jellyfin/jellyfin-web/index.html
                  echo "Fixed permissions for /jellyfin/jellyfin-web/index.html"
                else
                  echo "Warning: /jellyfin/jellyfin-web/index.html not found"
                fi
                echo "=== Switching to user 568 and starting Jellyfin ==="
                # Try different user-switching tools in order of preference
                if command -v setpriv >/dev/null 2>&1; then
                  exec setpriv --reuid=568 --regid=568 --clear-groups /jellyfin/jellyfin --datadir /config --cachedir /cache
                else
                  # Fallback: ensure user exists and use su
                  if ! id 568 >/dev/null 2>&1; then
                    adduser -D -u 568 -g 568 jellyfin 2>/dev/null || true
                  fi
                  exec su -s /bin/sh -c 'exec /jellyfin/jellyfin --datadir /config --cachedir /cache' "#568"
                fi
            env:
              TZ: ${TIMEZONE}
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              # FFmpeg configuration for better media processing
              JELLYFIN_FFmpeg__probesize: 100000000
              JELLYFIN_FFmpeg__analyzeduration: 1000000000
              JELLYFIN_FFmpeg__fflags: "+genpts+discardcorrupt+fastseek"
              JELLYFIN_FFmpeg__threads: "4"
              JELLYFIN_FFmpeg__hwaccel: "cuda"
              # Timeout settings
              JELLYFIN_FFmpeg__timeout: "60000"
              JELLYFIN_FFmpeg__imageExtractionTimeout: "60000"
              # GPU configuration
              NVIDIA_VISIBLE_DEVICES: all
              NVIDIA_DRIVER_CAPABILITIES: all
              # Memory management for .NET
              DOTNET_GCHeapHardLimit: "0x300000000"
              DOTNET_GCAllowVeryLargeObjects: "1"
              DOTNET_GCLOHThreshold: "100000"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                memory: 1Gi
                nvidia.com/gpu: 1
              limits:
                memory: 12Gi
                nvidia.com/gpu: 1
    service:
      app:
        controller: jellyfin
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https

    persistence:
      config:
        existingClaim: jellyfin
        advancedMounts:
          jellyfin:
            app:
              - path: /config

      media:
        type: nfs
        server: ${TRUENAS_IP}
        path: /mnt/BIGHDDZ1/Media
        globalMounts:
          - path: /ext_media
            readOnly: false

      library:
        type: hostPath
        hostPath: "/var/mnt/merged/"
        globalMounts:
          - path: /var/mnt/merged/

      tmpfs:
        type: emptyDir
        advancedMounts:
          jellyfin:
            app:
              - path: /config/transcode
                subPath: transcode
              - path: /cache
                subPath: cache
              - path: /config/log
                subPath: log
              - path: /tmp
                subPath: tmp
